name: Release

on:
  push:
    branches: [ feature-brainfree-auth-ui ]
  pull_request:
    branches: [ feature-brainfree-auth-ui ]

jobs:
  brainfree-auth-api:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x 18.x ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4

        with:
          images: |
            ghcr.io/brainfree-auth/api
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      #auth
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_AUTH_TOKEN  }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      #smvr
  #      - name: Clone repository
  #        uses: actions/cheackout@v3
  #        with:
  #          fetch-depth: 0
  #      - name: Get next version
  #        uses: thenativeweb/get-next-version@main
  #        id: get_next_version
  #      - name: Create new release
  #        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
  #        run: |
  #          NEXT_VERSION=${{ steps.get_next_version.outputs.hasNextVersion }}
  #          git tag $NEXT_VERSION
  #          git push origin $NEXT_VERSION

  #pstgres
#  database-job:
#    runs-on: ubuntu-latest
#    container: node:10.18-jessie
#    services:
#      # Label used to access the service container
#      postgres:
#        # Docker Hub image
#        image: postgres
#        # Provide the password for postgres
#        env:
#          POSTGRES_HOST: localhost
#          POSTGRES_PORT: 5432
#          POSTGRES_USER: ghc_user
#          POSTGRES_PASSWORD: ghc_user_123
#          POSTGRES_DATABASE: brainfree-auth-db
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#      steps:
#        - name: Check out repository code
#          uses: actions/checkout@v3
#
#        - name: Install dependencies
#          run: npm ci
#
#        - name: Connect to PostgreSQL
#          run: node client.js
#          env:
#            POSTGRES_HOST: localhost
#            POSTGRES_PORT: 5432
#            POSTGRES_USER: ghc_user
#            POSTGRES_PASSWORD: ghc_user_123
#            POSTGRES_DATABASE: brainfree-auth-db
